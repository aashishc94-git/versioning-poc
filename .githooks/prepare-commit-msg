#!/bin/bash

# Get the commit message
if [[ -f "$1" ]]; then
  commit_message=$(cat "$1")
else
  echo "ERROR: No commit message file provided. Please avoid using the -m option."
  exit 1
fi

# Check if the commit message matches the regex
branch_name=$(git rev-parse --abbrev-ref HEAD)

# Define regex patterns for commit messages based on branch types
task_commit_regex="^Task - [0-9]+: (feat|fix|chore|docs|style|refactor|test|perf): [A-Z].+"
release_commit_regex="^Release - [0-9]+: (major|minor|patch): [A-Z].+"
hotfix_commit_regex="^Hotfix - [0-9]+: (feat|patch): [A-Z].+"

# Determine which regex to use based on the branch name
if [[ "$branch_name" =~ ^features/.* ]]; then
    # Feature branch validation
    if ! [[ "$commit_message" =~ $task_commit_regex ]]; then
        echo "ERROR: Invalid commit message format for feature branch."
        echo ""
        echo "Please use the following format:"
        echo "  Task - {ID}: <type>: <subject>"
        echo "Where {ID} is a numeric task ID, <type> is one of: feat, fix, chore, docs, style, refactor, test, perf,"
        echo "and <subject> starts with a capital letter and is short and descriptive."
        exit 1
    fi
elif [[ "$branch_name" =~ ^releases/.* ]]; then
    # Release branch validation
    if ! [[ "$commit_message" =~ $release_commit_regex ]]; then
        echo "ERROR: Invalid commit message format for release branch."
        echo ""
        echo "Please use the following format:"
        echo "  Release - {ID}: <type>: <subject>"
        echo "Where {ID} is a numeric release ID, <type> is one of: feat, fix, chore, docs, style, refactor, test, perf,"
        echo "and <subject> starts with a capital letter and is short and descriptive."
        exit 1
    fi
elif [[ "$branch_name" =~ ^hotfix/.* || "$branch_name" =~ ^hotfixes/.* ]]; then
    # Hotfix branch validation
    if ! [[ "$commit_message" =~ $hotfix_commit_regex ]]; then
        echo "ERROR: Invalid commit message format for hotfix branch."
        echo ""
        echo "Please use the following format:"
        echo "  Hotfix - {ID}: <type>: <subject>"
        echo "Where {ID} is a numeric hotfix ID, <type> is one of: feat, fix, chore, docs, style, refactor, test, perf,"
        echo "and <subject> starts with a capital letter and is short and descriptive."
        exit 1
    fi
else
    echo "ERROR: Unknown branch type. Commit messages are only validated on feature, release, or hotfix branches."
    exit 1
fi
